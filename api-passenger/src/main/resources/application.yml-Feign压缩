spring:
  application:
    name: api-passenger
  security:
    user:
      name: root
      password: 1234
server:
  port: 8081
eureka:
  client:
    service-url:
      defaultZone: http://root:1234@localhost:8761/eureka/
    registry-fetch-interval-seconds: 30 #默认30秒从server端拉取一次注册表（定时任务）com/netflix/discovery/DiscoveryClient.class:899
    healthcheck:
      enabled: true #开启健康检查，需要引入actuator
  instance:
    lease-renewal-interval-in-seconds: 30 #发送心跳给server的频率，每隔这个时间会主动心跳一次（定时任务）com/netflix/discovery/DiscoveryClient.class:905
    lease-expiration-duration-in-seconds: 90 #Server从收到client后，下一次收到心跳的间隔时间。超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    metadata-map:
      a: b #灰度发布
    prefer-ip-address: true
logging:
  level:
    root: info
feign:
  client:
    config:
      default:
        connect-timeout: 5000
        read-timeout: 5000
        logger-level: full
  compression: #开启压缩可以有效节约网络资源，但是会增加CPU压力，建议把最小压缩的文档大小适度调大一点，进行gzip压缩。在HTTP协议中，有Content-Length的详细解读。Content-Length用于描述HTTP消息实体的传输长度the transfer-length of the message-body。在HTTP协议中，消息实体长度和消息实体的传输长度是有区别，比如说gzip压缩下，消息实体长度是压缩前的长度，消息实体的传输长度是gzip压缩后的长度。一般不需要设置压缩，如果系统流量浪费比较多，可以考虑一下。
    request:
      enabled: true
      mime-types:
      - application/json
      min-request-size: 2048 #单位是B
    response:
      enabled: true #设置返回值后，接受参数要改一下。